version: '3.8'

services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: agrolytix-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: agrolytix_db
      POSTGRES_USER: agrolytix_user
      POSTGRES_PASSWORD: agrolytix_2024
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=pt_BR.UTF-8 --lc-ctype=pt_BR.UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
      - ./database/backups:/backups
    networks:
      - agrolytix-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U agrolytix_user -d agrolytix_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Adminer - Interface web para PostgreSQL
  adminer:
    image: adminer:4.8.1
    container_name: agrolytix-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: pepa-linha-dark
    networks:
      - agrolytix-network
    depends_on:
      postgres:
        condition: service_healthy

  # Redis para cache e sessões (opcional)
  redis:
    image: redis:7-alpine
    container_name: agrolytix-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - agrolytix-network
    command: redis-server --appendonly yes --requirepass agrolytix_redis_2024

  # Aplicação Node.js (para desenvolvimento)
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: agrolytix-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: agrolytix_db
      DB_USER: agrolytix_user
      DB_PASSWORD: agrolytix_2024
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: agrolytix_redis_2024
      JWT_SECRET: agrolytix_jwt_secret_2024_desenvolvimento
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - agrolytix-network
    depends_on:
      postgres:
        condition: service_healthy
    command: npm run dev

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  agrolytix-network:
    driver: bridge 